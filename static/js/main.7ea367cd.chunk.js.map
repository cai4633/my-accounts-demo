{"version":3,"sources":["common/ts/detail.ts","common/ts/variable.ts","api/index.ts","common/ts/util.ts","hooks/useTag.tsx","api/tags.ts","components/icon/Icon.tsx","components/nav/Nav.tsx","components/layout/Layout.tsx","common/ts/context.ts","components/RecordListItem.tsx","views/Detail.tsx","common/ts/cache.ts","components/tagsContainer/TagsContainer.tsx","components/categorySection/CategorySection.tsx","views/edit/NoteSection.tsx","views/edit/numberPadSection/NumberPadWrapper.tsx","views/edit/numberPadSection/NumberPadSection.tsx","views/edit/numberPadSection/generateOutput.tsx","views/Money.tsx","api/records.ts","views/Tags.tsx","components/m-header/MHeader.tsx","views/AddTags.tsx","components/button/Button.tsx","views/EditTag.tsx","views/Home.tsx","views/NoMatch.tsx","components/picker/Picker.tsx","components/tabs/Tabs.tsx","common/ts/statistics.ts","views/Statistics.tsx","common/ts/records.ts","reducers/actions.ts","reducers/reducer.ts","hooks/useRecord.tsx","views/EditRecord.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["YMD","YM","isTotal","t","undefined","total","orderByDate","target","orders","forEach","item","createAt","push","Object","entries","sort","a","b","settleAccountsByDay","type","reduce","acc","cur","category","window","parseFloat","output","title","Math","abs","income","outcome","recordsRankByMonth","data","date","records","ym","dayjs","format","startDate","unix","endDate","add","rank","filter","value","current","day","getDataThisWeek","sortData","thisWeek","xData","i","map","index","theme","mixin","AV","require","Query","User","init","appId","appKey","serverURL","getIds","array","val","id","allTags","promise","find","then","todo","attributes","tags","useTag","useState","JSON","parse","localStorage","getItem","defaultTags","setDefaultTags","setTags","restTags","setRestTags","classify","setClassify","checktags","setChecktags","useEffect","length","slice","subset","rest","includes","tag","classifyByCategory","setItem","stringify","findTags","findTagId","someTags","findIndex","ids","updateTag","newTag","ret","name","deleteTag","tagsCopy","tagid","splice","addTag","Icon","prop","fill","className","classnames","onClick","aria-hidden","style","xlinkHref","NavWrapper","styled","nav","Nav","to","activeClassName","Wrapper","div","Layout","scrollTo","children","Context","React","createContext","state","newRecords","allRecords","dispatch","RecordListItem","props","icon","LayoutWrapper","Detail","memo","useContext","Date","setDate","showPicker","setShowPicker","getRecords","setRecords","setRank","setTotal","getFullYear","month","getMonth","toString","mode","onChange","showData","key","today","yesterday","subtract","getDay","selected","note","storage","local","removeItem","clear","Record","get","set","TagsWrapper","TagsContainer","addBtn","checkTags","onchange","parent","togglePad","getClass","toggleTag","Item","Fragment","empty","navLink","defaultProps","CategoryWrapper","section","CategorySection","history","useHistory","cg","NoteWrapper","NoteSection","placeholder","defaultValue","onBlur","e","NumberPadWrapper","NumberPadSection","_setOutput","setOutput","textContent","split","concat","isInputType","generateOutput","onOk","Money","initState","setData","showPad","setShowPad","categoryWrapper","useRef","tagsWrapper","bottom","changeFunc","obj","height","document","documentElement","clientHeight","offsetHeight","CSSTransition","appear","in","classNames","timeout","ref","result","random","Tags","extend","objs","keys","saveAll","addRecords","assign","goBack","info","setCategory","Header","header","MHeader","console","log","AddTags","copy","indexOf","Container","Button","backgroundColor","MyLayout","Tag","useParams","tagId","parseInt","tagMap","clickHandle","tagName","Note","Home","getDataToday","NoMatch","texts","label","Pick","setValue","cols","cascade","extra","align","arrow","Tab","size","values","tintColor","selectedIndex","getTotal","Statistics","setIndex","setTitle","node","setNode","chart","setChart","getElementById","myChart","echarts","setOption","tooltip","show","trigger","yAxis","grid","left","containLabel","xAxis","dataset","source","series","dimensions","encode","x","y","setOptionSource","Picker","收入","支出","Tabs","selectIndex","nativeEvent","selectedSegmentIndex","selectValue","source0","source1","thisMonth","getDataThisMonth","source2","thisYear","getDataThisYear","source3","updateRecords","record","query","equalTo","first","save","updateRecord","deleteRecord","destroy","deleteOne","actions","addNew","action","Array","isArray","updateAll","addAll","reducer","fn","useRecord","EditRecord","recordId","btnVisible","setBtnVisible","useMemo","onclick","alert","text","onPress","newVal","titles","store","App","useReducer","Provider","exact","from","path","component","EditTag","Boolean","location","hostname","match","IconFont","createFromIconfontCN","scriptUrl","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7ea367cd.chunk.js","sourcesContent":["import dayjs from \"dayjs\"\r\n\r\nconst YMD = \"YYYY-MM-DD\"\r\nconst YM = \"YYYY-MM\"\r\n// 自定义类型保护\r\nconst isTotal = (t: myTypes.TotalType | myTypes.AccountType): t is myTypes.TotalType => (t as myTypes.TotalType).total !== undefined\r\n\r\n//将原始数据按照日期降序排列\r\nfunction orderByDate<T extends myTypes.RecordItem>(target: T[]) {\r\n  const orders: { [key: string]: myTypes.RecordItem[] } = {}\r\n  target.forEach((item) => {\r\n    if (!item.createAt) {\r\n      return\r\n    }\r\n    if (!(item.createAt in orders)) {\r\n      orders[item.createAt] = []\r\n    }\r\n    orders[item.createAt].push(item)\r\n  })\r\n  return Object.entries(orders).sort((a, b) => {\r\n    if (a[0] < b[0]) {\r\n      return 1\r\n    }\r\n    if (a[0] > b[0]) {\r\n      return -1\r\n    }\r\n    return 0\r\n  })\r\n}\r\n\r\n// 返回每天的支出总和以及收入总和\r\nfunction settleAccountsByDay(target: myTypes.RecordItem[], type = true) {\r\n  // TODO how to confirm return type by generic\r\n  if (type) {\r\n    const total = target.reduce((acc, cur) => (cur.category === \"+\" ? acc + window.parseFloat(cur.output) : acc - window.parseFloat(cur.output)), 0)\r\n    return {\r\n      title: total >= 0 ? \"收入\" : \"支出\",\r\n      total: Math.abs(total),\r\n    }\r\n  }\r\n  // type = false\r\n  return target.reduce(\r\n    (acc: myTypes.AccountType, cur) =>\r\n      cur.category === \"+\"\r\n        ? { ...acc, income: acc.income += window.parseFloat(cur.output) }\r\n        : { ...acc, outcome: acc.outcome += window.parseFloat(cur.output) },\r\n    { income: 0, outcome: 0 }\r\n  )\r\n}\r\n\r\n// 将原始数据按照月份分类排列\r\nfunction recordsRankByMonth(data: myTypes.RecordItem[], date: Date) {\r\n  const records = orderByDate(data)\r\n  const ym = dayjs(date).format(YM) //仅保留年月\r\n  const startDate = dayjs(ym).unix()\r\n  const endDate = dayjs(ym).add(1, \"month\").unix()\r\n  const rank = records.filter((value) => {\r\n    const current = dayjs(value[0]).unix()\r\n    return current >= startDate && current < endDate\r\n  })\r\n\r\n  const { income, outcome } = rank.reduce(\r\n    (acc: myTypes.AccountType, cur) => {\r\n      const day = settleAccountsByDay(cur[1], false)\r\n      return isTotal(day)\r\n        ? acc\r\n        : {\r\n            income: acc.income + day.income,\r\n            outcome: acc.outcome + day.outcome,\r\n          }\r\n    },\r\n    { income: 0, outcome: 0 }\r\n  )\r\n\r\n  return { rank, income, outcome }\r\n}\r\nfunction getDataToday(data: myTypes.RecordItem[]) {\r\n  type ReturnType = {\r\n    total: myTypes.TotalType\r\n    records: myTypes.RecordItem[]\r\n  }\r\n  const ret: ReturnType = { total: { title: \"\", total: 0 }, records: [] }\r\n  const sortData = orderByDate(data)\r\n  const today = dayjs().format(YMD)\r\n  sortData.forEach((item) => {\r\n    if (item[0] === today) {\r\n      const total = settleAccountsByDay(item[1])\r\n      if (isTotal(total)) {\r\n        ret.total = total\r\n        ret.records = item[1]\r\n      }\r\n    }\r\n  })\r\n  return ret\r\n}\r\n\r\nfunction getDataThisWeek(data: myTypes.RecordItem[]) {\r\n  const sortData = orderByDate(data)\r\n  const thisWeek: myTypes.WeekItem[] = [] //[date,income,outcome]\r\n  const xData = [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"]\r\n  for (let i = 0; i < 7; i++) {\r\n    //获取本周七天的日期\r\n    thisWeek.push([dayjs().day(i).format(YMD), 0, 0])\r\n  }\r\n  sortData.forEach((item) => {\r\n    for (let i = 0; i < 7; i++) {\r\n      if (item[0] === thisWeek[i][0]) {\r\n        const total = settleAccountsByDay(item[1], false)\r\n        if (!isTotal(total)) {\r\n          thisWeek[i] = [item[0], total.income, total.outcome]\r\n        }\r\n        break\r\n      }\r\n    }\r\n  })\r\n  return thisWeek.map((item, index): myTypes.WeekItem => [xData[index], item[1], item[2]])\r\n}\r\n\r\nfunction getDataThisMonth(data: myTypes.RecordItem[]) {\r\n  const sortData = orderByDate(data)\r\n  const thisMonth: myTypes.WeekItem[] = [] //[date,income,outcome]\r\n  const xData: string[] = []\r\n  for (let i = 1; i <= 31; i++) {\r\n    xData.push(i + \"\")\r\n    thisMonth.push([dayjs().date(i).format(YMD), 0, 0])\r\n  }\r\n  sortData.forEach((item) => {\r\n    for (let i = 0; i < 31; i++) {\r\n      if (item[0] === thisMonth[i][0]) {\r\n        const total = settleAccountsByDay(item[1], false)\r\n        if (!isTotal(total)) {\r\n          thisMonth[i] = [item[0], total.income, total.outcome]\r\n        }\r\n        break\r\n      }\r\n    }\r\n  })\r\n  return thisMonth.map((item, index): myTypes.WeekItem => [xData[index], item[1], item[2]])\r\n}\r\n\r\nfunction getDataThisYear(data: myTypes.RecordItem[]) {\r\n  const sortData = orderByDate(data)\r\n  const thisYear: myTypes.WeekItem[] = [] //[date,income,outcome]\r\n  const xData: string[] = []\r\n  for (let i = 1; i <= 12; i++) {\r\n    xData.push(i + \"\")\r\n    //获取今年的月份\r\n    const date = dayjs()\r\n      .month(i - 1)\r\n      .format(YM)\r\n    const total = recordsRankByMonth(data, new Date(Date.parse(date)))\r\n    thisYear.push([date, total.income, total.outcome])\r\n  }\r\n  return thisYear.map((item, index): myTypes.WeekItem => [xData[index], item[1], item[2]])\r\n}\r\n\r\nexport { orderByDate, settleAccountsByDay, recordsRankByMonth, isTotal, getDataThisWeek, getDataThisMonth, getDataThisYear, getDataToday }\r\n","const theme = {\r\n  backgroundColor: \"#06c\",\r\n  backgroundWhite: \"#eee\",\r\n  // backgroundColor: \"#ffda47\",\r\n  maxWidth: \"768px\",\r\n  color: \"#fff\",\r\n  text_color_grey: \"#777\",\r\n  text_color_darker: \"#aaa\",\r\n  iconBackground: \"#f1f1f1\",\r\n  dateBackground: \"#e5e5e5\",\r\n  borderColor: \"#ddd\",\r\n}\r\nconst mixin = {\r\n  noWrap: `\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;`,\r\n}\r\n\r\nexport { theme, mixin }\r\n","const AV = require(\"leancloud-storage\")\r\nconst { Query, User } = AV\r\nAV.init({\r\n  appId: \"Vai02JpY0WFCmxvXsba5plya-9Nh9j0Va\",\r\n  appKey: \"QT6uaO0otX1bYKrsFgYrphey\",\r\n  serverURL: \"https://vai02jpy.lc-cn-e1-shared.com\",\r\n})\r\n\r\nexport { AV, Query, User }\r\n","const TAGID = \"tagid\"\r\nlet tagid = -1\r\nfunction createTagId() {\r\n  tagid++\r\n  return tagid\r\n}\r\n\r\n// 取随机数\r\nfunction createRecordId(allRecords?: myTypes.RecordItem[]): number {\r\n  return (Math.random() * 100000000) | 0 //2^31\r\n}\r\n\r\nfunction getComplementarySet<T>(subset: T[], array: T[]): T[] {\r\n  return array.filter((val) => !subset.includes(val))\r\n}\r\n\r\nfunction getIds<T extends { id: number }>(array: T[]): number[] {\r\n  return array.map((val) => val.id)\r\n}\r\nexport { createTagId, getComplementarySet, getIds, createRecordId }\r\n","import { getAllTags } from \"@/api/tags\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { getComplementarySet, getIds } from \"../common/ts/util\"\r\n\r\ninterface Classify<T = myTypes.TagItem> {\r\n  income: T[]\r\n  outcome: T[]\r\n}\r\n\r\nconst __TAGS__ = \"tags\"\r\nconst allTags: myTypes.TagItem[] = []\r\nconst promise: Promise<myTypes.TagItem[]> = getAllTags().then((tags) => {\r\n  allTags.push(...tags)\r\n  return tags\r\n})\r\n\r\nfunction useTag() {\r\n  const [defaultTags, setDefaultTags] = useState(JSON.parse(localStorage.getItem(__TAGS__) || \"[]\"))\r\n  const [tags, setTags] = useState<myTypes.TagItem[]>(defaultTags)\r\n  const [restTags, setRestTags] = useState<myTypes.TagItem[]>([])\r\n  const [classify, setClassify] = useState<Classify>({ income: [], outcome: [] })\r\n  const [checktags, setChecktags] = useState<number[]>([])\r\n  useEffect(() => {\r\n    promise.then(() => {\r\n      if (!defaultTags.length) {\r\n        setDefaultTags(allTags.slice())\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const rest = getComplementarySet<number>(getIds(tags), getIds(allTags))\r\n    setClassify(classifyByCategory(tags))\r\n    localStorage.setItem(__TAGS__, JSON.stringify(tags))\r\n    setRestTags(findTags(rest))\r\n  }, [tags])\r\n\r\n  useEffect(() => {\r\n    setTags(defaultTags)\r\n  }, [defaultTags])\r\n\r\n  // 根据category将将标签分类\r\n  function classifyByCategory<T extends { category: myTypes.Categories }>(tags: T[]) {\r\n    const income: T[] = []\r\n    const outcome: T[] = []\r\n    tags.forEach((tag) => {\r\n      if (tag.category === \"+\") {\r\n        income.push(tag)\r\n      } else {\r\n        outcome.push(tag)\r\n      }\r\n    })\r\n    return { income, outcome }\r\n  }\r\n\r\n  // 获取标签id\r\n  const findTagId = (id: number, someTags: myTypes.TagItem[] = tags) => {\r\n    return someTags.findIndex((item) => item.id === id)\r\n  }\r\n  // 根据id 获取标签\r\n  const findTags = (ids: number[]): myTypes.TagItem[] => {\r\n    return ids.map((id) => allTags.filter((tag) => tag.id === id)[0])\r\n  }\r\n\r\n  // 更新标签\r\n  const updateTag = (id: number, newTag: string) => {\r\n    const copy = tags.slice()\r\n    const ret = copy.map((tag) => {\r\n      return tag.id === id ? { ...tag, name: newTag } : tag\r\n    })\r\n    setTags(ret)\r\n  }\r\n\r\n  // 删除标签\r\n  const deleteTag = (id: number) => {\r\n    const tagsCopy = tags.slice()\r\n    const tagid = findTagId(id)\r\n    if (tagid === -1) {\r\n      return\r\n    }\r\n    tagsCopy.splice(tagid, 1)\r\n    setTags(tagsCopy)\r\n  }\r\n\r\n  // 添加标签\r\n  const addTag = (val: number[]) => {\r\n    setTags([...tags, ...findTags(val)])\r\n  }\r\n\r\n  return { tags, setTags, updateTag, findTagId, deleteTag, addTag, allTags, checktags, setChecktags, restTags, classify, findTags }\r\n}\r\n\r\nexport { useTag }\r\n","import { AV, Query } from \"./index\"\r\n\r\n// 向leancloud 添加标签\r\nfunction addTags(data: myTypes.TagItem[]) {\r\n  const Tags = AV.Object.extend(\"tags\") //获取tags 类\r\n  const objs = data.map((item) => {\r\n    const tags = new Tags()\r\n    const keys = Object.keys(item) as (keyof typeof item)[]\r\n    keys.map((key) => {\r\n      tags.set(key, item[key]) //添加tags\r\n    })\r\n    return tags\r\n  })\r\n\r\n  AV.Object.saveAll(objs).then(() => {\r\n    console.log(\"保存成功\")\r\n  })\r\n}\r\n\r\n// 获取leancloud标签\r\nfunction getAllTags(): Promise<myTypes.TagItem[]> {\r\n  const query = new Query(\"tags\")\r\n  return query.find().then((todo: any) => todo.map((item: { attributes: myTypes.TagItem }) => item.attributes))\r\n}\r\n\r\nexport { addTags, getAllTags }\r\n\r\n// =================================================================================================================\r\n// [\r\n//   { id: createTagId(), name: \"服饰\", category: \"-\", icon: \"clothes\" },\r\n//   { id: createTagId(), name: \"餐饮\", category: \"-\", icon: \"food\" },\r\n//   { id: createTagId(), name: \"住房\", category: \"-\", icon: \"house\" },\r\n//   { id: createTagId(), name: \"交通\", category: \"-\", icon: \"traffic\" },\r\n//   { id: createTagId(), name: \"购物\", category: \"-\", icon: \"shopping\" },\r\n//   { id: createTagId(), name: \"旅游\", category: \"-\", icon: \"trip\" },\r\n//   { id: createTagId(), name: \"日用品\", category: \"-\", icon: \"commodity\" },\r\n//   { id: createTagId(), name: \"零食\", category: \"-\", icon: \"snack\" },\r\n//   { id: createTagId(), name: \"运动\", category: \"-\", icon: \"sport\" },\r\n//   { id: createTagId(), name: \"长辈\", category: \"-\", icon: \"parents\" },\r\n//   { id: createTagId(), name: \"孩子\", category: \"-\", icon: \"children\" },\r\n//   { id: createTagId(), name: \"社交\", category: \"-\", icon: \"communication\" },\r\n//   { id: createTagId(), name: \"数码\", category: \"-\", icon: \"digital\" },\r\n//   { id: createTagId(), name: \"数码\", category: \"-\", icon: \"digital\" },\r\n//   { id: createTagId(), name: \"数码\", category: \"-\", icon: \"digital\" },\r\n//   { id: createTagId(), name: \"数码\", category: \"-\", icon: \"digital\" },\r\n//   { id: createTagId(), name: \"数码\", category: \"-\", icon: \"digital\" },\r\n//   { id: createTagId(), name: \"数码\", category: \"-\", icon: \"digital\" },\r\n//   { id: createTagId(), name: \"通讯\", category: \"-\", icon: \"message\" },\r\n//   { id: createTagId(), name: \"烟酒\", category: \"-\", icon: \"wine\" },\r\n//   { id: createTagId(), name: \"工资\", category: \"+\", icon: \"salary\" },\r\n//   { id: createTagId(), name: \"兼职\", category: \"+\", icon: \"ptjob\" },\r\n//   { id: createTagId(), name: \"理财\", category: \"+\", icon: \"financing\" },\r\n//   { id: createTagId(), name: \"礼金\", category: \"+\", icon: \"gift\" },\r\n//   { id: createTagId(), name: \"其它\", category: \"-\", icon: \"other\" },\r\n//   { id: createTagId(), name: \"其它\", category: \"+\", icon: \"other\" },\r\n// ]\r\n","import React from \"react\"\r\nimport classnames from \"classnames\"\r\n\r\ninterface Prop {\r\n  name: string\r\n  fill?: string\r\n  onClick?: () => void\r\n  className?: string\r\n}\r\n\r\nfunction Icon(prop: Prop) {\r\n  const { name, fill, className } = prop\r\n  return (\r\n    <span className={classnames(\"svg-wrapper\", className)} onClick={prop.onClick}>\r\n      <svg className=\"icon\" aria-hidden=\"true\" style={{ fill: fill }}>\r\n        <use xlinkHref={\"#icon-\" + name}></use>\r\n      </svg>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Icon\r\n","import React from \"react\"\r\nimport Icon from \"@/components/icon/Icon\"\r\nimport styled from \"styled-components\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { theme } from \"@/common/ts/variable\"\r\n\r\nconst NavWrapper = styled.nav`\r\n  background-color: #fff;\r\n  ul {\r\n    display: flex;\r\n    margin-bottom: 0;\r\n    li {\r\n      flex: 1;\r\n      box-shadow: 0 0 2px rgba(0, 0, 0, 0.25);\r\n      a {\r\n        padding: 5px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: rgba(0, 0, 0, 0.3);\r\n        font-size: 12px;\r\n        svg {\r\n          width: 2em;\r\n          height: 2em;\r\n        }\r\n        .icon {\r\n          margin-bottom: 5px;\r\n        }\r\n        &.selected {\r\n          background-color: ${theme.backgroundColor};\r\n          color: ${theme.color};\r\n          font-weight: 600;\r\n          svg {\r\n            fill: ${theme.color};\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction Nav() {\r\n  return (\r\n    <NavWrapper>\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"/home\" activeClassName=\"selected\">\r\n            <Icon name=\"home\"></Icon>首页\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/detail\" activeClassName=\"selected\">\r\n            <Icon name=\"details\"></Icon>明细\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/money\" activeClassName=\"selected\">\r\n            <Icon name=\"add_money\"></Icon>记账\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/tags\" activeClassName=\"selected\">\r\n            <Icon name=\"tag\"></Icon>标签\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/statistics\" activeClassName=\"selected\">\r\n            <Icon name=\"statistics\"></Icon>图表\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </NavWrapper>\r\n  )\r\n}\r\nexport default Nav\r\n","import React, { useEffect } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Nav from \"components/nav/Nav\"\r\nimport {theme} from 'common/ts/variable'\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  text-align: center;\r\n  position: relative;\r\n  .container {\r\n    height: 100%;\r\n    main {\r\n      min-height: 100%;\r\n      padding-bottom: 55px;\r\n      text-align: left;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n    .nav-wrapper {\r\n      position: fixed;\r\n      z-index: 1000;\r\n      width: 100%;\r\n      max-width: ${theme.maxWidth};\r\n      bottom: 0px;\r\n    }\r\n  }\r\n`\r\n\r\nfunction Layout(prop: any) {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n  return (\r\n    <Wrapper className=\"layout\">\r\n      <div className=\"container\">\r\n        <main className={prop.className}>{prop.children}</main>\r\n        <div className=\"nav-wrapper\">\r\n          <Nav></Nav>\r\n        </div>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\nexport default Layout\r\n","import React, { createContext } from \"react\"\r\n\r\ntype ContextType = {\r\n  state: myTypes.Store\r\n  dispatch: React.Dispatch<myTypes.ActionType>\r\n}\r\n\r\nexport const Context = React.createContext<ContextType>({\r\n  state: { newRecords: [], allRecords: [] },\r\n  dispatch: () => {},\r\n})\r\n","import { useTag } from \"@/hooks/useTag\"\r\nimport React from \"react\"\r\nimport Icon from \"./icon/Icon\"\r\n\r\ninterface Props {\r\n  id: number\r\n}\r\n\r\nconst RecordListItem = (props: Props) => {\r\n  const { findTags } = useTag()\r\n  const { id } = props\r\n  return (\r\n    <span className=\"tag\">\r\n      <Icon name={findTags([id])[0]?.icon}></Icon>\r\n      <span className=\"text\">{findTags([id])[0]?.name}</span>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default RecordListItem\r\n","import { orderByDate, settleAccountsByDay, recordsRankByMonth, isTotal } from \"@/common/ts/detail\"\r\nimport { theme, mixin } from \"@/common/ts/variable\"\r\nimport { useTag } from \"@/hooks/useTag\"\r\nimport { DatePickerView } from \"antd-mobile\"\r\nimport Layout from \"components/layout/Layout\"\r\nimport dayjs from \"dayjs\"\r\nimport React, { useState, useEffect, memo, useContext, useRef, useMemo } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Icon from \"@/components/icon/Icon\"\r\nimport { Context } from \"@/common/ts/context\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport RecordListItem from \"@/components/RecordListItem\"\r\n\r\nconst LayoutWrapper = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  .category-wrapper {\r\n    color: ${theme.color};\r\n    text-align: center;\r\n    background-color: ${theme.backgroundColor};\r\n    button {\r\n      font-size: 24px;\r\n      line-height: 2em;\r\n    }\r\n    h1 {\r\n      font-size: 20px;\r\n    }\r\n    .content {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: 10px;\r\n\r\n      .content-item {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n      }\r\n      .date {\r\n        flex: 1.5;\r\n        position: relative;\r\n        .month > .big {\r\n          font-size: 1.4em;\r\n        }\r\n        &::after {\r\n          position: absolute;\r\n          content: \"\";\r\n          right: 0;\r\n          display: block;\r\n          width: 2px;\r\n          height: calc(100% - 16px);\r\n          background-color: ${theme.color};\r\n        }\r\n      }\r\n      .income,\r\n      .outcome {\r\n        flex: 2;\r\n      }\r\n    }\r\n    .datePickerWrapper {\r\n      background: #fff;\r\n      position: absolute;\r\n      bottom: 0px;\r\n      left: 0px;\r\n      width: 100%;\r\n      .shade {\r\n        position: fixed;\r\n        background-color: rgba(0, 0, 0, 0.1);\r\n        width: 100%;\r\n        height: 100vh;\r\n        top: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .content-wrapper {\r\n    .content {\r\n      margin-top: 1em;\r\n      &:nth-child(1) {\r\n        margin-top: 0em;\r\n      }\r\n      h2 {\r\n        color: ${theme.text_color_grey};\r\n        border-bottom: 1px solid ${theme.borderColor};\r\n        font-size: 12px;\r\n        line-height: 1.8;\r\n        padding: 4px 10px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        .total > .title {\r\n          margin-right: 6px;\r\n        }\r\n      }\r\n      .detail {\r\n        padding: 0 18px;\r\n        li {\r\n          a {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            font-size: 16px;\r\n            line-height: 22px;\r\n            padding: 9px 0px;\r\n            .tag > .text {\r\n              margin-left: 10px;\r\n            }\r\n            .note {\r\n              flex: 1;\r\n              margin: 0 10px;\r\n              color: ${theme.text_color_darker};\r\n              font-size: 14px;\r\n              text-align: left;\r\n              ${mixin.noWrap}\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\ninterface RecordsType {\r\n  rank: myTypes.Rank[]\r\n  income: number\r\n  outcome: number\r\n}\r\nconst Detail: React.FC = memo(() => {\r\n  const {\r\n    state: { allRecords },\r\n    dispatch,\r\n  } = useContext(Context)\r\n  const [date, setDate] = useState<Date>(new Date())\r\n  const [showPicker, setShowPicker] = useState(false)\r\n  const { findTagId, tags, findTags } = useTag()\r\n  const getRecords = (data: myTypes.RecordItem[], date: Date) => recordsRankByMonth(data, date)\r\n  const [records, setRecords] = useState<RecordsType>(getRecords([], date))\r\n  const [rank, setRank] = useState<ReturnType<typeof orderByDate>>([])\r\n  const [total, setTotal] = useState<Pick<RecordsType, \"income\" | \"outcome\">>({ income: 0, outcome: 0 })\r\n  const getDay = (day: string) => {\r\n    const today = dayjs().format(\"YYYY-MM-DD\")\r\n    const yesterday = dayjs().subtract(1, \"day\").format(\"YYYY-MM-DD\")\r\n    //利用object/hash的key值唯一\r\n    const map = {\r\n      [day]: day,\r\n      [today]: \"今天\",\r\n      [yesterday]: \"昨天\",\r\n    }\r\n    return map[day]\r\n  }\r\n  const onChange = (value: Date) => {\r\n    const { rank, income, outcome } = getRecords(allRecords, value) //数据随时间选择器改变\r\n    setRecords({ rank, income, outcome })\r\n    setDate(value)\r\n  }\r\n  const getMonth = (date: Date) => {\r\n    const month = date.getMonth() + 1\r\n    return month > 9 ? month.toString() : \"0\" + month\r\n  }\r\n\r\n  const pickerHide = () => {\r\n    setShowPicker(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const { rank, income, outcome } = records\r\n    setRank(rank)\r\n    setTotal({ income, outcome })\r\n  }, [records])\r\n\r\n  useEffect(() => {\r\n    setRecords(getRecords(allRecords, date))\r\n  }, [allRecords])\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <Layout className=\"statistics\">\r\n        <div className=\"category-wrapper\">\r\n          <h1>天天记账</h1>\r\n          <div className=\"content\">\r\n            <div className=\"date content-item\" onClick={() => setShowPicker(true)}>\r\n              <span className=\"year\">{date.getFullYear()}年</span>\r\n              <span className=\"month\">\r\n                <span className=\"big\">{getMonth(date)}</span>月<Icon name=\"dropdown\"></Icon>\r\n              </span>\r\n            </div>\r\n            <div className=\"income content-item\">\r\n              <span className=\"title\">收入</span>\r\n              <span className=\"text\">{total.income}</span>\r\n            </div>\r\n            <div className=\"outcome content-item\">\r\n              <span className=\"title\">支出</span>\r\n              <span className=\"text\">{total.outcome}</span>\r\n            </div>\r\n          </div>\r\n          {showPicker && (\r\n            <div className=\"datePickerWrapper\">\r\n              <div\r\n                className=\"shade\"\r\n                onClick={() => {\r\n                  pickerHide()\r\n                }}></div>\r\n              <DatePickerView mode=\"month\" value={date} onChange={onChange}></DatePickerView>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"content-wrapper\">\r\n          {rank.map((item: myTypes.Rank) => {\r\n            const showData = settleAccountsByDay(item[1])\r\n            return (\r\n              <div className=\"content\" key={item[0]}>\r\n                <h2>\r\n                  <span className=\"date\">{getDay(item[0])}</span>\r\n                  <div className=\"total\">\r\n                    <span className=\"title\">{isTotal(showData) && showData.title}</span>\r\n                    <span className=\"number\">{isTotal(showData) && showData.total}</span>\r\n                  </div>\r\n                </h2>\r\n                <ul className=\"detail\">\r\n                  {item[1].map((item: myTypes.RecordItem, index) => {\r\n                    return (\r\n                      <li key={item.id}>\r\n                        <NavLink to={`/editRecord/${item.id}`}>\r\n                          {item.selected.map((id) => (\r\n                            <RecordListItem id={id} key={`${item.id}${id}`}></RecordListItem>\r\n                          ))}\r\n                          <span className=\"note no-wrap\">{item.note}</span>\r\n                          <span className=\"amount\">\r\n                            {item.category}\r\n                            {item.output}\r\n                          </span>\r\n                        </NavLink>\r\n                      </li>\r\n                    )\r\n                  })}\r\n                </ul>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </Layout>\r\n    </LayoutWrapper>\r\n  )\r\n})\r\nexport default Detail\r\n","// const TAGS = \"__tags__\"\r\nconst RECORDS = \"__records__\"\r\n\r\nclass Storage {\r\n  get(key: string, value: any = undefined) {\r\n    const local = localStorage.getItem(key)\r\n    return local ? JSON.parse(local) : value\r\n  }\r\n\r\n  set(key: string, value: string) {\r\n    localStorage.setItem(key, value)\r\n  }\r\n  remove(key: string) {\r\n    localStorage.removeItem(key)\r\n  }\r\n  clear() {\r\n    localStorage.clear()\r\n  }\r\n}\r\n\r\nconst storage = new Storage()\r\n\r\nclass Record {\r\n  public static get(): myTypes.RecordItem[]{\r\n    return storage.get(RECORDS, [])\r\n  }\r\n  public static set(records: myTypes.RecordItem[]) {\r\n    storage.set(RECORDS, JSON.stringify(records))\r\n  }\r\n}\r\n\r\nexport { Record }\r\n","import React, { useState } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport Icon from \"../icon/Icon\"\r\nimport styled from \"styled-components\"\r\nimport { theme } from \"@/common/ts/variable.ts\"\r\nimport classnames from \"classnames\"\r\n\r\ninterface Props {\r\n  tags: any[]\r\n  checkTags?: number[]\r\n  selected?: number[]\r\n  addBtn?: boolean\r\n  parent?: string\r\n  onchange?: (val: number) => void\r\n  togglePad?: (selected: number[]) => void\r\n}\r\n\r\nconst TagsWrapper = styled.div`\r\n  background-color: #fff;\r\n  & > ol {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n\r\n    li {\r\n      font-size: 12px;\r\n      margin: 10px 15px;\r\n      border: 1px solid transparent;\r\n      &.empty {\r\n        width: 3rem;\r\n        height: 0;\r\n        margin: 0 16px;\r\n        border: none;\r\n        \r\n      }\r\n      a,\r\n      .item {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        word-break: keep-all;\r\n        svg.icon {\r\n          padding: 4px;\r\n          border-radius: 50%;\r\n          width: 3rem;\r\n          height: 3rem;\r\n          margin-bottom: 4px;\r\n          background-color: ${theme.iconBackground};\r\n          border: 1px solid transparent;\r\n        }\r\n      }\r\n\r\n      .checked {\r\n        svg.icon {\r\n          border: 1px solid red;\r\n        }\r\n      }\r\n      .selected {\r\n        svg.icon {\r\n          background-color: ${theme.backgroundColor};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst TagsContainer: React.FC<Props> = (props) => {\r\n  const { tags, addBtn, checkTags, onchange, parent, togglePad, selected } = props\r\n  const getClass = (id: number) => {\r\n    if (checkTags) {\r\n      return checkTags.includes(id) ? \"checked\" : \"\"\r\n    }\r\n    if (selected) {\r\n      return selected.includes(id) ? \"selected\" : \"\"\r\n    }\r\n    return \"\"\r\n  }\r\n  const toggleTag = (tagid: number) => {\r\n    if (onchange) {\r\n      onchange(tagid)\r\n    } else if (togglePad) {\r\n      togglePad([tagid])\r\n    }\r\n  }\r\n  const Item = (tag: myTypes.TagItem) => {\r\n    return (\r\n      <React.Fragment>\r\n        <Icon name={tag.icon}></Icon>\r\n        <span className=\"name\">{tag.name}</span>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  //路由部分\r\n  const navLink = (tag: myTypes.TagItem) => {\r\n    return (\r\n      <li\r\n        key={tag.id}\r\n        onClick={() => {\r\n          toggleTag(tag.id)\r\n        }}>\r\n        {parent !== \"money\" ? (\r\n          <NavLink to={\"/tags/\" + tag.id}>{Item(tag)}</NavLink>\r\n        ) : (\r\n          <div className={classnames(\"item\", getClass(tag.id))}>{Item(tag)}</div>\r\n        )}\r\n      </li>\r\n    )\r\n  }\r\n\r\n  // addTag部分\r\n  const add = (tag: myTypes.TagItem) => {\r\n    return (\r\n      <li\r\n        key={tag.id}\r\n        onClick={() => {\r\n          toggleTag(tag.id)\r\n        }}>\r\n        <div className={classnames(\"item\", getClass(tag.id))}>{Item(tag)}</div>\r\n      </li>\r\n    )\r\n  }\r\n  const empty: number[] = []\r\n  for (let i = 1; i <= 8; i++) {\r\n    empty.push(i)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <TagsWrapper className=\"tags-container\">\r\n        <ol>\r\n          {/* 各种标签 */}\r\n          {tags &&\r\n            tags.map((tag: myTypes.TagItem) => {\r\n              return addBtn ? navLink(tag) : add(tag)\r\n            })}\r\n          {/* 添加按钮 */}\r\n          {addBtn && (\r\n            <li>\r\n              <NavLink to=\"/addTags\">\r\n                <Icon name=\"add\"></Icon>\r\n                <span className=\"name\">添加</span>\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n          {/* 妥协布局，添加空元素 */}\r\n          {empty.map((item) => (\r\n            <li className=\"empty\" key={item}></li>\r\n          ))}\r\n        </ol>\r\n      </TagsWrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nTagsContainer.defaultProps = {\r\n  addBtn: true,\r\n}\r\nexport default TagsContainer\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { theme } from \"common/ts/variable\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst CategoryWrapper = styled.section`\r\n  display: flex;\r\n  color: ${theme.color};\r\n  background-color: ${theme.backgroundColor};\r\n  font-size: 16px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  button {\r\n    color: ${theme.color};\r\n    max-width: 20%;\r\n    line-height: 3em;\r\n    flex: 1;\r\n    position: relative;\r\n    text-align: center;\r\n    margin: 0 10px;\r\n    &.selected::after {\r\n      content: \"\";\r\n      display: block;\r\n      position: absolute;\r\n      background-color: ${theme.color};\r\n      width: 100%;\r\n      height: 4px;\r\n      left: 0;\r\n      bottom: 0px;\r\n    }\r\n  }\r\n  .cancel {\r\n    position: absolute;\r\n    right: 20px;\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst map = { \"+\": \"收入\", \"-\": \"支出\" }\r\ntype KeyType = keyof typeof map\r\ntype Prop = { category: KeyType; onchange: (category: KeyType) => void }\r\nconst CategorySection: React.FC<Prop> = (prop) => {\r\n  const categorys: KeyType[] = [\"-\", \"+\"]\r\n  const index = prop.category\r\n  const history = useHistory()\r\n  return (\r\n    <CategoryWrapper>\r\n      {categorys.map((cg) => (\r\n        <button\r\n          key={cg}\r\n          className={index === cg ? \"selected\" : \"\"}\r\n          onClick={() => {\r\n            prop.onchange(cg)\r\n          }}>\r\n          {map[cg]}\r\n        </button>\r\n      ))}\r\n      <span\r\n        className=\"cancel extend-click\"\r\n        onClick={() => {\r\n          history.push(\"/\")\r\n        }}>\r\n        取消\r\n      </span>\r\n    </CategoryWrapper>\r\n  )\r\n}\r\n\r\nexport default CategorySection\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\ntype Prop = { note: string; onchange: (note: string) => void; placeholder?: string; title?: string }\r\nconst NoteWrapper = styled.section`\r\n  text-align: left;\r\n  background-color: #f5f5f5;\r\n  padding: 0 10px;\r\n  display: flex;\r\n  span {\r\n    padding: 1em 0;\r\n  }\r\n  input {\r\n    padding: 1em 0;\r\n    margin-left: 16px;\r\n    color: #333;\r\n    flex: 1;\r\n  }\r\n`\r\nconst NoteSection: React.FC<Prop> = (prop) => {\r\n  const { note, onchange } = prop\r\n  const onblur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    onchange(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <NoteWrapper>\r\n      <span>{prop.title || \"备注\"}</span>\r\n      <input type=\"text\" placeholder={prop.placeholder || \"在这里填写备注\"} defaultValue={note} onBlur={onblur} />\r\n    </NoteWrapper>\r\n  )\r\n}\r\n\r\nexport default NoteSection\r\n","import styled from \"styled-components\"\r\n\r\nconst NumberPadWrapper = styled.section`\r\n  background-color: #fff;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 180px;\r\n  .output {\r\n    width: 100%;\r\n    input {\r\n      pointer-events: none;\r\n      font-size: 26px;\r\n      text-align: right;\r\n      width: 100%;\r\n      box-sizing: border-box;\r\n      line-height: 1.5em;\r\n      padding: 0px 10px;\r\n      box-shadow: inset 0px -5px 5px -5px rgba(0, 0, 0, 0.25), inset 0px 5px 5px -5px rgba(0, 0, 0, 0.25);\r\n      -moz-user-select: none;\r\n      -webkit-user-select: none;\r\n      -ms-user-select: none;\r\n      user-select: none;\r\n    }\r\n  }\r\n  .pad {\r\n    width: 100%;\r\n    flex-grow: 1;\r\n    min-height: 100px;\r\n    display: flex;\r\n    box-sizing: border-box;\r\n    .button-wrapper {\r\n      width: 100%;\r\n      button {\r\n        box-sizing: border-box;\r\n        background-color: #eee;\r\n        width: 25%;\r\n        float: left;\r\n        height: 25%;\r\n        &.white-1 {\r\n          background-color: #f2f2f2;\r\n        }\r\n        &.white-2 {\r\n          background-color: #e0e0e0;\r\n        }\r\n        &.white-3 {\r\n          background-color: #d3d3d3;\r\n        }\r\n        &.white-4 {\r\n          background-color: #c1c1c1;\r\n        }\r\n        &.white-5 {\r\n          background-color: #b8b8b8;\r\n        }\r\n        &.white-6 {\r\n          background-color: #a9a9a9;\r\n        }\r\n        &.white-7 {\r\n          background-color: #9a9a9a;\r\n        }\r\n        &.white-8 {\r\n          background-color: #8b8b8b;\r\n        }\r\n        &.dot {\r\n          font-weight: 900;\r\n        }\r\n        &:nth-child(12) {\r\n          height: 50%;\r\n          float: right;\r\n        }\r\n        &:nth-child(13) {\r\n          width: 50%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport { NumberPadWrapper }\r\n","import React from \"react\"\r\nimport { NumberPadWrapper } from \"./NumberPadWrapper\"\r\nimport { generateOutput, isInputType } from \"./generateOutput\"\r\n\r\ntype Prop = {\r\n  output: string\r\n  onchange: (output: string) => void\r\n  onOk: () => void\r\n}\r\nconst MAX_LENGTH = 14\r\nconst NumberPadSection: React.FC<Prop> = (prop) => {\r\n  const output = prop.output\r\n  const _setOutput = prop.onchange\r\n  const setOutput = (value: string) => {\r\n    if (value.length >= MAX_LENGTH) {\r\n      value = value.slice(0, MAX_LENGTH)\r\n    }\r\n    _setOutput(!value.length ? \"0\" : value)\r\n  }\r\n  const clickFunc = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    const value = (e.target as HTMLButtonElement).textContent\r\n    if (!value) {\r\n      return\r\n    }\r\n    if (value === \"OK\") {\r\n      //TODO\r\n      prop.onOk()\r\n      return\r\n    }\r\n    if (isInputType(value)) {\r\n      setOutput(generateOutput(value, output))\r\n    }\r\n  }\r\n  return (\r\n    <NumberPadWrapper>\r\n      <div className=\"output\">\r\n        <input\r\n          value={output}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            setOutput(e.target.value)\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"pad\">\r\n        <div className=\"button-wrapper clearfix\" onClick={clickFunc}>\r\n          <button className=\"white-1\">1</button>\r\n          <button className=\"white-2\">2</button>\r\n          <button className=\"white-3\">3</button>\r\n          <button className=\"white-4\">删除</button>\r\n          <button className=\"white-2\">4</button>\r\n          <button className=\"white-3\">5</button>\r\n          <button className=\"white-4\">6</button>\r\n          <button className=\"white-5\">清空</button>\r\n          <button className=\"white-3\">7</button>\r\n          <button className=\"white-4\">8</button>\r\n          <button className=\"white-5\">9</button>\r\n          <button className=\"white-7\">OK</button>\r\n          <button className=\"white-5\">0</button>\r\n          <button className=\"dot white-6\">.</button>\r\n        </div>\r\n      </div>\r\n    </NumberPadWrapper>\r\n  )\r\n}\r\n\r\nexport default NumberPadSection\r\n","export type InputType = \"1\" | \"2\" | \"3\" | \"4\" | \"5\" | \"6\" | \"7\" | \"8\" | \"9\" | \"0\" | \".\" | \"清空\" | \"删除\"\r\n\r\nexport function isInputType(value: string): value is InputType {\r\n  return \"0123456789.\".split(\"\").concat([\"删除\", \"清空\"]).includes(value)\r\n}\r\n\r\nexport function generateOutput<T extends InputType>(value: T, output: string): string {\r\n  switch (value) {\r\n    case \"1\":\r\n    case \"2\":\r\n    case \"3\":\r\n    case \"4\":\r\n    case \"5\":\r\n    case \"6\":\r\n    case \"7\":\r\n    case \"8\":\r\n    case \"9\":\r\n    case \"0\":\r\n      return output === \"0\" ? value : output + value\r\n    case \".\":\r\n      return output.includes(\".\") ? output : output + value\r\n    case \"清空\": //清空功能\r\n      return \"0\"\r\n    case \"删除\": //删除功能\r\n      return output === \"0\" ? \"0\" : output.slice(0, -1)\r\n    default:\r\n      return \"0\"\r\n  }\r\n}\r\n","import { Record } from \"@/common/ts/cache\"\r\nimport { Context } from \"@/common/ts/context\"\r\nimport { theme } from \"@/common/ts/variable\"\r\nimport TagsContainer from \"@/components/tagsContainer/TagsContainer\"\r\nimport { useTag } from \"@/hooks/useTag\"\r\nimport { addRecords } from \"api/records\"\r\nimport CategorySection from \"components/categorySection/CategorySection\"\r\nimport dayjs from \"dayjs\"\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport styled from \"styled-components\"\r\nimport NoteSection from \"./edit/NoteSection\"\r\nimport NumberPadSection from \"./edit/numberPadSection/NumberPadSection\"\r\nimport { Toast } from \"antd-mobile\"\r\nimport { createRecordId } from \"common/ts/util\"\r\ninterface MapType {\r\n  [key: string]: \"income\" | \"outcome\"\r\n}\r\n\r\nconst LayoutWrapper = styled.div`\r\n  background-color: #e5e5e5;\r\n  height: 100vh;\r\n  overflow: auto;\r\n  main {\r\n    height: 100%;\r\n    overflow: auto;\r\n\r\n    .category-wrapper {\r\n      min-height: 40px;\r\n    }\r\n    .tags-wrapper {\r\n      overflow: auto;\r\n      height: calc(100vh - 40px);\r\n    }\r\n  }\r\n  section.bottom {\r\n    position: fixed;\r\n    width: 100%;\r\n    bottom: 0;\r\n    max-width: ${theme.maxWidth};\r\n  }\r\n`\r\n\r\nconst Money: React.FC = () => {\r\n  const { state: { allRecords } } = useContext(Context)\r\n  const initState: myTypes.MoneyState = { selected: [], note: \"\", category: \"-\", output: \"0\", id: 0 }\r\n  const [data, setData] = useState<myTypes.MoneyState>(initState)\r\n  const [showPad, setShowPad] = useState(false)\r\n  const categoryWrapper = useRef<HTMLDivElement>(null)\r\n  const tagsWrapper = useRef<HTMLDivElement>(null)\r\n  const bottom = useRef<HTMLDivElement>(null)\r\n  const { dispatch } = useContext(Context)\r\n  const history = useHistory()\r\n  const changeFunc = (obj: Partial<myTypes.MoneyState>) => {\r\n    setData({ ...data, ...obj })\r\n  }\r\n\r\n  // ok 按钮提交功能\r\n  const submit = () => {\r\n    if (parseFloat(data.output) === 0) {\r\n      Toast.info(\"您还未输入金额\", 2)\r\n      return\r\n    }\r\n    const result = { ...data, createAt: dayjs().format(\"YYYY-MM-DD\"), id: createRecordId(allRecords) }\r\n    Record.set([...Record.get(), result])\r\n    addRecords([result])\r\n    dispatch({ type: \"addNew\", data: result })\r\n    setData(Object.assign({}, initState)) //reset\r\n    history.goBack()\r\n  }\r\n  const map: MapType = { \"+\": \"income\", \"-\": \"outcome\" }\r\n  let { classify } = useTag()\r\n  const selectTag = (selected: number[]) => {\r\n    changeFunc({ selected })\r\n  }\r\n\r\n  // 当selected 改变时, showpad跟着改变\r\n  useEffect(() => {\r\n    setShowPad(!!data.selected.length)\r\n  }, [data.selected])\r\n\r\n  useEffect(() => {\r\n    // 输入框弹出时，让标签高度自适应\r\n    if (categoryWrapper.current && tagsWrapper.current) {\r\n      const height = document.documentElement.clientHeight - categoryWrapper.current.offsetHeight - (bottom.current ? bottom.current.offsetHeight : 0)\r\n      tagsWrapper.current.style.height = `${height}px`\r\n    }\r\n  }, [showPad])\r\n  return (\r\n    <LayoutWrapper>\r\n      <CSSTransition appear in classNames=\"fade\" timeout={200}>\r\n        <main>\r\n          <div className=\"category-wrapper\" ref={categoryWrapper}>\r\n            <CategorySection category={data.category} onchange={(category) => changeFunc({ category })}></CategorySection>\r\n          </div>\r\n          <div className=\"tags-wrapper\" ref={tagsWrapper}>\r\n            <TagsContainer tags={classify[map[data.category]]} parent=\"money\" togglePad={selectTag} selected={data.selected}></TagsContainer>\r\n          </div>\r\n        </main>\r\n      </CSSTransition>\r\n\r\n      {showPad && (\r\n        <section className=\"bottom\" ref={bottom}>\r\n          <NoteSection note={data.note} onchange={(note) => changeFunc({ note })}></NoteSection>\r\n          <NumberPadSection output={data.output} onchange={(output) => changeFunc({ output })} onOk={submit}></NumberPadSection>\r\n        </section>\r\n      )}\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default Money\r\n","import { AV, Query } from \"./index\"\r\n\r\n// 向leancloud 添加记录\r\nfunction addRecords(data: myTypes.RecordItem[]) {\r\n  const Tags = AV.Object.extend(\"Records\") //获取tags 类\r\n  const objs = data.map((item) => {\r\n    const records = new Tags()\r\n    const keys = Object.keys(item) as (keyof typeof item)[]\r\n    keys.map((key) => {\r\n      records.set(key, item[key]) //添加tags\r\n    })\r\n    return records\r\n  })\r\n\r\n  AV.Object.saveAll(objs)\r\n}\r\nfunction updateRecord(data: myTypes.RecordItem): void {\r\n  const array = [\"output\", \"note\"] as const\r\n  const query = new Query(\"Records\")\r\n  query.equalTo(\"id\", data.id)\r\n  query.first().then((record: any) => {\r\n    array.forEach((item) => record.set(item, data[item]))\r\n    record.save()\r\n  })\r\n}\r\n\r\nfunction deleteOne(data: myTypes.RecordItem) {\r\n  const query = new Query(\"Records\")\r\n  query.equalTo(\"id\", data.id)\r\n  query.first().then((record: any) => {\r\n    record.destroy()\r\n  })\r\n}\r\n\r\n// 获取leancloud标签\r\nfunction getAllRecords(): Promise<myTypes.RecordItem[]> {\r\n  const query = new Query(\"Records\")\r\n  return query.find().then((todo: any) => todo.map((item: { attributes: myTypes.RecordItem }) => item.attributes))\r\n}\r\n\r\nexport { addRecords, getAllRecords, updateRecord, deleteOne }\r\n","import CategorySection from \"@/components/categorySection/CategorySection\"\r\nimport TagsContainer from \"@/components/tagsContainer/TagsContainer\"\r\nimport Layout from \"components/layout/Layout\"\r\nimport React, { useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { useTag } from \"@/hooks/useTag\"\r\n\r\ninterface MapType {\r\n  [key: string]: \"income\" | \"outcome\"\r\n}\r\n\r\nconst LayoutWrapper = styled.div`\r\n  background-color: #e5e5e5;\r\n  height: 100%;\r\n  main {\r\n    .tags-wrapper {\r\n      overflow: auto;\r\n    }\r\n  }\r\n`\r\n\r\nconst Tags = () => {\r\n  const map: MapType = { \"+\": \"income\", \"-\": \"outcome\" }\r\n  const { tags, addTag, classify } = useTag()\r\n  const [category, setCategory] = useState<myTypes.Categories>(\"-\")\r\n  const onchange = (val: myTypes.Categories) => {\r\n    setCategory(val)\r\n  }\r\n  return (\r\n    <LayoutWrapper>\r\n      <Layout>\r\n        <div className=\"category-wrapper\">\r\n          <CategorySection category={category} onchange={onchange}></CategorySection>\r\n        </div>\r\n        <div className=\"tags-wrapper\">\r\n          <TagsContainer tags={classify[map[category]]}> </TagsContainer>\r\n        </div>\r\n      </Layout>\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Icon from \"../icon/Icon\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { theme } from \"@/common/ts/variable\"\r\nimport \"common/less/mixin.less\"\r\n\r\ninterface Props {\r\n  onOk?: () => void\r\n}\r\n\r\nconst Header = styled.header`\r\n  text-align: center;\r\n  background-color: ${theme.backgroundColor};\r\n  color: #fff;\r\n  h1 {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n    padding: 0 20px;\r\n    margin: 0;\r\n    .title {\r\n      line-height: 3em;\r\n    }\r\n  }\r\n`\r\nconst MHeader: React.FC<Props> = (props) => {\r\n  const { onOk } = props\r\n  const history = useHistory()\r\n  const goback = () => {\r\n    history.goBack()\r\n  }\r\n  return (\r\n    <Header>\r\n      <h1>\r\n        <Icon name=\"left\" onClick={goback} className=\"extend-click\"></Icon>\r\n        <span className=\"title\">{props.children}</span>\r\n        <span\r\n          className=\"btn extend-click\"\r\n          onClick={() => {\r\n            onOk!()\r\n          }}>\r\n          完成\r\n        </span>\r\n      </h1>\r\n    </Header>\r\n  )\r\n}\r\n\r\nMHeader.defaultProps = {\r\n  onOk: () => {\r\n    console.log(\"ok\")\r\n  },\r\n}\r\nexport default MHeader\r\n","import MHeader from \"@/components/m-header/MHeader\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { useTag } from \"@/hooks/useTag\"\r\nimport Layout from \"@/components/layout/Layout\"\r\nimport TagsContainer from \"components/tagsContainer/TagsContainer\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { theme } from \"@/common/ts/variable\"\r\n\r\nconst LayoutWrapper = styled.div`\r\n  background-color: ${theme.dateBackground};\r\n  min-height: 100%;\r\n  h2.title {\r\n    font-size: 14px;\r\n    padding: 10px 20px;\r\n  }\r\n`\r\nconst AddTags: React.FC = () => {\r\n  const { addTag, checktags, setChecktags, restTags } = useTag()\r\n  const history = useHistory()\r\n  const title = \"暂无可添加的标签\"\r\n  // 添加标签页面的toggle事件\r\n  const onchangeFn = (val: number) => {\r\n    const copy = checktags.slice()\r\n    const index = copy.indexOf(val)\r\n    if (index === -1) {\r\n      copy.push(val)\r\n    } else {\r\n      copy.splice(index, 1)\r\n    }\r\n    setChecktags(copy)\r\n  }\r\n\r\n  // 完成按钮点击事件\r\n  const onOk = () => {\r\n    addTag(checktags)\r\n    history.goBack()\r\n  }\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <MHeader onOk={onOk}>添加标签</MHeader>\r\n      <Layout>\r\n        {restTags.length ? (\r\n          <TagsContainer tags={restTags} addBtn={false} checkTags={checktags} onchange={onchangeFn}></TagsContainer>\r\n        ) : (\r\n          <h2 className=\"title\">{title}</h2>\r\n        )}\r\n      </Layout>\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default AddTags\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\ntype Prop = { backgroundColor?: string } & React.HTMLAttributes<HTMLDivElement>\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 44px;\r\n  span {\r\n    vertical-align: top;\r\n    display: inline-block;\r\n    color: #fff;\r\n    font-size: 17px;\r\n    line-height: 22px;\r\n    padding: 9px 15px;\r\n    border-radius: 4px;\r\n    background-color: #767676;\r\n  }\r\n`\r\n\r\nconst Button: React.FC<Prop> = (prop) => {\r\n  const { title, backgroundColor } = prop\r\n  return (\r\n    <Container onClick={prop.onClick}>\r\n      <span style={{ backgroundColor }}>{title}</span>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport { useTag } from \"@/hooks/useTag\"\r\nimport styled from \"styled-components\"\r\nimport NoteSection from \"views/edit/NoteSection\"\r\nimport Layout from \"@/components/layout/Layout\"\r\nimport Button from \"@/components/button/Button\"\r\nimport MHeader from \"components/m-header/MHeader\"\r\n\r\nconst MyLayout = styled(Layout)`\r\n  font-size: 16px;\r\n  position: relative;\r\n  main {\r\n    margin-top: 8px;\r\n    & > span.noTag {\r\n      padding-left: 20px;\r\n    }\r\n    section {\r\n      padding: 6px 18px;\r\n      background-color: #fff;\r\n      input {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n  .button-wrapper {\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    bottom: 34px;\r\n    span {\r\n      white-space: nowrap;\r\n      background-color: #ff4d4f;\r\n    }\r\n  }\r\n`\r\n\r\ntype Prop = {\r\n  placeholder?: string\r\n  btnBackground?: string\r\n}\r\ntype Params = { tagId: string }\r\n\r\nconst Tag: React.FC<Prop> = (prop) => {\r\n  const history = useHistory()\r\n  const { tags, findTagId, updateTag, deleteTag } = useTag()\r\n  const { tagId: id } = useParams<Params>()\r\n  const tagid = findTagId(window.parseInt(id))\r\n  const tagMap = {\r\n    title: \"编辑标签\",\r\n    value: \"删除标签\",\r\n    clickHandle: () => {\r\n      deleteTag(window.parseInt(id))\r\n    },\r\n  }\r\n  const tagName = tagid >= 0 ? tags[tagid].name : \"\"\r\n  const changeFn = (tag: string) => {\r\n    updateTag(tagid, tag)\r\n  }\r\n  const Note = <NoteSection note={tagName} onchange={changeFn} title=\"标签名\" placeholder={prop.placeholder || \"在这里填写备注\"}></NoteSection>\r\n  const onOk = () => {\r\n    history.goBack()\r\n  }\r\n  return (\r\n    <MyLayout className=\"tag\">\r\n      <MHeader onOk={onOk}>编辑标签</MHeader>\r\n      <main>{tagid === -1 ? <span className=\"noTag\">标签不存在或者已删除</span> : Note}</main>\r\n      <div className=\"button-wrapper\">\r\n        <Button title={tagMap.value} onClick={tagMap.clickHandle}></Button>\r\n      </div>\r\n    </MyLayout>\r\n  )\r\n}\r\n\r\nexport default Tag\r\n","import React, { FC, useContext, useEffect } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Layout from \"@/components/layout/Layout\"\r\nimport dayjs from \"dayjs\"\r\nimport { theme, mixin } from \"common/ts/variable\"\r\nimport Icon from \"components/icon/Icon\"\r\nimport { getDataToday } from \"common/ts/detail\"\r\nimport { Context } from \"@/common/ts/context\"\r\nimport RecordListItem from \"@/components/RecordListItem\"\r\nconst Wrapper = styled.div`\r\n  background-color: ${theme.backgroundWhite};\r\n  height: 100%;\r\n  .layout {\r\n    header {\r\n      color: ${theme.color};\r\n      background-color: ${theme.backgroundColor};\r\n      text-align: center;\r\n      font-size: 1.5rem;\r\n      line-height: 2.5em;\r\n      border-bottom: 1px solid #ccc;\r\n    }\r\n    .date {\r\n      color: ${theme.color};\r\n      background-color: ${theme.backgroundColor};\r\n      padding: 1em;\r\n      p {\r\n        line-height: 2em;\r\n        &.text {\r\n          font-size: 1.5rem;\r\n          text-align: center;\r\n        }\r\n      }\r\n    }\r\n    .current {\r\n      padding: 1.5em 0;\r\n      flex: 1;\r\n      overflow: auto;\r\n      h2 {\r\n        padding: 0 1em;\r\n        font-size: 1rem;\r\n        display: flex;\r\n        align-items: center;\r\n        font-weight: 600;\r\n        svg {\r\n          width: 1.5rem;\r\n          height: 1.5rem;\r\n          margin-right: 6px;\r\n        }\r\n      }\r\n      .content {\r\n        margin-top: 1em;\r\n        li {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          font-size: 16px;\r\n          line-height: 22px;\r\n          background-color: #fff;\r\n          padding: 5px 0px;\r\n          border-radius: 5px;\r\n          margin: 5px 0;\r\n          .tag {\r\n            margin: 0 1em;\r\n            .text {\r\n              margin-left: 10px;\r\n            }\r\n          }\r\n          .note {\r\n            flex: 1;\r\n            margin: 0 10px;\r\n            color: #aaa;\r\n            font-size: 14px;\r\n            text-align: left;\r\n            ${mixin.noWrap}\r\n          }\r\n          .amount {\r\n            margin: 0 1em;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\ninterface Props {}\r\nconst Home: FC = (props: Props) => {\r\n  const {\r\n    state: { allRecords },\r\n  } = useContext(Context)\r\n  const today = dayjs().format(\"YYYY年MM月DD日\")\r\n  const data = getDataToday(allRecords)\r\n\r\n  return (\r\n    <Wrapper className=\"home\">\r\n      <Layout className=\"layout\">\r\n        <header>天天记账</header>\r\n        <section className=\"date\">\r\n          <p>今天是</p>\r\n          <p className=\"text\">{today}</p>\r\n        </section>\r\n        <section className=\"current\">\r\n          <h2>\r\n            <Icon name=\"current\"></Icon>今天\r\n          </h2>\r\n          <div className=\"content\">\r\n            <ul className=\"today\">\r\n              {data.records.map((item) => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    {item.selected.map((id) => (\r\n                      <RecordListItem id={id} key={`${item.id}${id}`}></RecordListItem>\r\n                    ))}\r\n                    <span className=\"note no-wrap\">{item.note}</span>\r\n                    <span className=\"amount\">\r\n                      {item.category}\r\n                      {item.output}\r\n                    </span>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      </Layout>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from \"react\"\r\nimport Layout from \"components/layout/Layout\"\r\n\r\nconst NoMatch:React.FC = () => {\r\n  return (\r\n    <Layout>\r\n      <h1>页面不存在</h1>\r\n    </Layout>\r\n  )\r\n}\r\n\r\n\r\nexport default NoMatch\r\n","import React, { useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Picker, List } from \"antd-mobile\"\r\nimport { theme } from \"@/common/ts/variable\"\r\nconst Wrapper = styled.div`\r\n  text-align: center;\r\n  .am-list-item {\r\n    background-color: ${theme.backgroundColor};\r\n    .am-list-line {\r\n      justify-content: center;\r\n      .am-list-content {\r\n        flex: 0;\r\n        min-width: 2em;\r\n        text-align: center;\r\n      }\r\n      .am-list-extra {\r\n        flex-basis: 10px;\r\n      }\r\n    }\r\n  }\r\n`\r\nconst colorStyle = {\r\n  display: \"inline-block\",\r\n  verticalAlign: \"middle\",\r\n  width: \"16px\",\r\n  height: \"16px\",\r\n  marginRight: \"10px\",\r\n}\r\n\r\nconst texts = [\r\n  {\r\n    label: \"收入\",\r\n    value: \"收入\",\r\n  },\r\n  {\r\n    label: \"支出\",\r\n    value: \"支出\",\r\n  },\r\n]\r\ninterface Props {\r\n  onChange?: (date: string) => void\r\n}\r\nconst Pick = (props: Props) => {\r\n  const [value, setValue] = useState<string>(\"支出\")\r\n  return (\r\n    <Wrapper className=\"wrapper\">\r\n      <Picker\r\n        cols={1}\r\n        data={texts}\r\n        title=\"选择图表种类\"\r\n        cascade={true}\r\n        extra=\" \"\r\n        onChange={(date) => {\r\n          if (date && typeof date[0] === \"string\") {\r\n            setValue(date[0])\r\n            props.onChange!(date[0])\r\n          }\r\n        }}>\r\n        <List.Item align=\"middle\" arrow=\"down\">\r\n          {value}\r\n        </List.Item>\r\n      </Picker>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Pick\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Tabs, Badge, SegmentedControl, WingBlank } from \"antd-mobile\"\r\nimport { theme } from \"common/ts/variable\"\r\nconst Wrapper = styled.div`\r\n  padding: 10px;\r\n`\r\ninterface Props {\r\n  onChange: (e: any) => void\r\n  index: number\r\n}\r\n\r\nconst Tab = (props: Props) => {\r\n  return (\r\n    <Wrapper>\r\n      <WingBlank size=\"lg\" className=\"sc-example\">\r\n        <SegmentedControl\r\n          values={[\"周\", \"月\", \"年\"]}\r\n          onChange={props.onChange}\r\n          tintColor=\"#222\"\r\n          style={{ backgroundColor: theme.backgroundColor }}\r\n          selectedIndex={props.index}\r\n        />\r\n      </WingBlank>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Tab\r\n","function getTotal(data: myTypes.WeekItem[]): myTypes.AccountType {\r\n  return data.reduce(\r\n    (acc, cur): myTypes.AccountType => {\r\n      return { income: acc.income + cur[1], outcome: acc.outcome + cur[2] }\r\n    },\r\n    { income: 0, outcome: 0 }\r\n  )\r\n}\r\nexport {getTotal}\r\n","import { Context } from \"@/common/ts/context\"\r\nimport { getDataThisMonth, getDataThisWeek, getDataThisYear } from \"@/common/ts/detail\"\r\nimport { theme } from \"@/common/ts/variable\"\r\nimport Picker from \"@/components/picker/Picker\"\r\nimport Tabs from \"@/components/tabs/Tabs\"\r\nimport { getTotal } from \"common/ts/statistics\"\r\nimport Layout from \"components/layout/Layout\"\r\nimport echarts from \"echarts\"\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst paddingLeft = \"20px\"\r\nconst LayoutWrapper = styled.div`\r\n  height: 100%;\r\n  .header {\r\n    background-color: ${theme.backgroundColor};\r\n    padding-bottom: 15px;\r\n    .am-list-content {\r\n      color: ${theme.color};\r\n    }\r\n  }\r\n  .content {\r\n    .title {\r\n      font-size: 1em;\r\n      padding: 10px 20px;\r\n      margin: 0;\r\n      border-bottom: 1px solid #ccc;\r\n      margin-bottom: 10px;\r\n    }\r\n    p {\r\n      color: ${theme.text_color_grey};\r\n      padding: 2px ${paddingLeft};\r\n      font-size: 12px;\r\n    }\r\n    #chart {\r\n      margin: 0px 5px;\r\n    }\r\n  }\r\n`\r\nconst Statistics: React.FC = () => {\r\n  const set = [\"本周\", \"本月\", \"今年\"] as const\r\n  const [index, setIndex] = useState(0) //切换年月周\r\n  const [title, setTitle] = useState(\"周\")\r\n  const {\r\n    state: { allRecords },\r\n  } = useContext(Context)\r\n  const [node, setNode] = useState<HTMLDivElement>()\r\n  const [chart, setChart] = useState<echarts.ECharts>()\r\n  const [total, setTotal] = useState<myTypes.AccountType>(getTotal(getDataThisWeek(allRecords)))\r\n  // 第一次mounted\r\n  useEffect(() => {\r\n    setNode(document.getElementById(\"chart\") as HTMLDivElement)\r\n    if (node) {\r\n      const myChart = echarts.init(node)\r\n      setChart(myChart)\r\n      // 绘制图表\r\n      myChart.setOption({\r\n        tooltip: {\r\n          show: true,\r\n          trigger: \"item\",\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n        },\r\n        grid: {\r\n          left: 2,\r\n          containLabel: true,\r\n        },\r\n        xAxis: { type: \"category\" },\r\n        dataset: {\r\n          source: getDataThisWeek(allRecords),\r\n        },\r\n        series: [\r\n          {\r\n            name: \"支出\",\r\n            type: \"line\",\r\n            dimensions: [\"date\", \"income\", \"outcome\"],\r\n            encode: {\r\n              x: 0,\r\n              y: 2,\r\n            },\r\n          },\r\n        ],\r\n      })\r\n    }\r\n  }, [node, allRecords])\r\n\r\n  const setOptionSource = (data: myTypes.WeekItem[]) => {\r\n    chart?.setOption({\r\n      dataset: {\r\n        source: data,\r\n      },\r\n    })\r\n  }\r\n  const onChange = (e: any) => {\r\n    const selectIndex = e.nativeEvent.selectedSegmentIndex\r\n    const selectValue = e.nativeEvent.value\r\n    switch (selectIndex) {\r\n      case 0:\r\n        const source0 = getDataThisWeek(allRecords)\r\n        setTotal(getTotal(source0))\r\n        setOptionSource(source0)\r\n        break\r\n      case 1:\r\n        const source1 = getDataThisMonth(allRecords)\r\n        setTotal(getTotal(source1))\r\n        setOptionSource(source1)\r\n        break\r\n      case 2:\r\n        const source2 = getDataThisYear(allRecords)\r\n        setTotal(getTotal(source2))\r\n        setOptionSource(source2)\r\n        break\r\n      default:\r\n        const source3 = getDataThisWeek(allRecords)\r\n        setTotal(getTotal(source3))\r\n        setOptionSource(source3)\r\n        break\r\n    }\r\n    setIndex(selectIndex)\r\n    setTitle(selectValue)\r\n  }\r\n  const pickerChange = (data: string) => {\r\n    const map: { [key: string]: number } = { 收入: 1, 支出: 2 }\r\n    chart?.setOption({\r\n      series: [\r\n        {\r\n          name: data,\r\n          encode: { x: 0, y: map[data] },\r\n        },\r\n      ],\r\n    })\r\n  }\r\n  return (\r\n    <LayoutWrapper className=\"statistics\">\r\n      <Layout>\r\n        <div className=\"header\">\r\n          <Picker onChange={pickerChange}></Picker>\r\n          <Tabs onChange={onChange} index={index}></Tabs>\r\n        </div>\r\n        <div className=\"content\">\r\n          <h1 className=\"title\">{set[index]}</h1>\r\n          <p>总收入:￥{total.income}</p>\r\n          <p>总支出:￥{total.outcome}</p>\r\n          <div style={{ height: \"300px\" }} id=\"chart\" className=\"chart\"></div>\r\n        </div>\r\n      </Layout>\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default Statistics\r\n","import { updateRecord, deleteOne } from \"api/records\"\r\n\r\nconst findRecord = (id: number, records: myTypes.RecordItem[]): myTypes.RecordItem => {\r\n  return records.filter((item) => item.id === id)[0]\r\n}\r\nconst updateRecords = <T extends myTypes.RecordItem>(record: T, records: T[]): T[] => {\r\n  updateRecord(record)\r\n  return records.map((item) => (item.id === record.id ? record : item))\r\n}\r\n\r\nconst deleteRecord = <T extends myTypes.RecordItem>(record: T, records: T[]): T[] => {\r\n  deleteOne(record)\r\n  return records.filter((item) => item.id !== record.id)\r\n}\r\nexport { findRecord, updateRecords, deleteRecord }\r\n","import { updateRecords, deleteRecord } from \"@/common/ts/records\"\r\n\r\nexport const actions = {\r\n  addNew: (state: myTypes.Store, action: myTypes.ActionType): myTypes.Store => {\r\n    const { newRecords, allRecords } = state\r\n    if (!Array.isArray(action.data)) {\r\n      return {\r\n        newRecords: [...newRecords, action.data],\r\n        allRecords: [...allRecords, action.data],\r\n      }\r\n    }\r\n    return state\r\n  },\r\n\r\n  updateAll: (state: myTypes.Store, action: myTypes.ActionType): myTypes.Store => {\r\n    const { newRecords, allRecords } = state\r\n    if (!Array.isArray(action.data)) {\r\n      return {\r\n        newRecords,\r\n        allRecords: updateRecords(action.data, allRecords),\r\n      }\r\n    }\r\n    return state\r\n  },\r\n\r\n  addAll: (state: myTypes.Store, action: myTypes.ActionType): myTypes.Store => {\r\n    const { newRecords, allRecords } = state\r\n    const { data } = action\r\n    return Array.isArray(data)\r\n      ? {\r\n          newRecords: [...newRecords],\r\n          allRecords: [...data],\r\n        }\r\n      : state\r\n  },\r\n\r\n  deleteOne: (state: myTypes.Store, action: myTypes.ActionType): myTypes.Store => {\r\n    const { newRecords, allRecords } = state\r\n    const { data } = action\r\n    return !Array.isArray(data)\r\n      ? {\r\n          newRecords: [...newRecords],\r\n          allRecords: deleteRecord(data, allRecords),\r\n        }\r\n      : state\r\n  },\r\n}\r\n","import { actions } from \"./actions\"\r\n\r\nconst reducer = (state: myTypes.Store, action: myTypes.ActionType) => {\r\n  const fn = actions[action.type]\r\n  if (!fn) {\r\n    return { ...state }\r\n  }\r\n  return fn(state, action)\r\n}\r\n\r\nexport { reducer }\r\n","import { getAllRecords } from \"@/api/records\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nfunction useRecord() {\r\n  const [records, setRecords] = useState<myTypes.RecordItem[]>([])\r\n  useEffect(() => {\r\n    getAllRecords().then((records) => {\r\n      setRecords(records)\r\n    })\r\n  }, [])\r\n\r\n  return { records }\r\n}\r\n\r\nexport { useRecord }\r\n","import React, { useContext, useMemo, useRef, useState } from \"react\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport Layout from \"@/components/layout/Layout\"\r\nimport Button from \"@/components/button/Button\"\r\nimport MHeader from \"components/m-header/MHeader\"\r\nimport { findRecord, updateRecords } from \"@/common/ts/records\"\r\nimport { Context } from \"@/common/ts/context\"\r\nimport { Toast, Modal } from \"antd-mobile\"\r\nimport { theme } from \"@/common/ts/variable\"\r\n\r\nconst MyLayout = styled(Layout)`\r\n  font-size: 16px;\r\n  position: relative;\r\n  main {\r\n    margin-top: 8px;\r\n    & > span {\r\n      padding-left: 20px;\r\n    }\r\n    .record {\r\n      ul > li {\r\n        margin: 0 20px;\r\n        padding-left: 20px;\r\n        font-size: 14px;\r\n        line-height: 4;\r\n        border-bottom: 1px solid #ccc;\r\n        label {\r\n          span {\r\n            color: ${theme.text_color_grey};\r\n          }\r\n          input {\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .button-wrapper {\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    bottom: 34px;\r\n    span {\r\n      white-space: nowrap;\r\n      background-color: #ff4d4f;\r\n    }\r\n  }\r\n`\r\n\r\ntype Prop = {\r\n  placeholder?: string\r\n  btnBackground?: string\r\n}\r\ntype Params = { recordId: string }\r\n\r\nconst EditRecord: React.FC<Prop> = React.memo((prop) => {\r\n  const history = useHistory()\r\n  const output = useRef<HTMLInputElement>(null)\r\n  const note = useRef<HTMLInputElement>(null)\r\n  const { recordId } = useParams<Params>()\r\n  const [btnVisible, setBtnVisible] = useState(true)\r\n  const {\r\n    state: { allRecords },\r\n    dispatch,\r\n  } = useContext(Context)\r\n  const record: myTypes.RecordItem = useMemo(() => findRecord(window.parseInt(recordId), allRecords), [allRecords])\r\n  const map = {\r\n    title: \"编辑账单\",\r\n    value: \"删除账单\",\r\n    onclick: () => {\r\n      Modal.alert(\r\n        \"警告\",\r\n        \"你确定要删除吗?\",\r\n        [\r\n          { text: \"取消\" },\r\n          {\r\n            text: \"确定\",\r\n            onPress: () => {\r\n              dispatch({ type: \"deleteOne\", data: record })\r\n              setBtnVisible(false)\r\n            },\r\n          },\r\n        ],\r\n        \"ios\"\r\n      )\r\n    },\r\n    onOk() {\r\n      if (record) {\r\n        // TODO 当数据没变化时，不提交，直接返回\r\n        const newVal: myTypes.RecordItem = { ...record, note: note.current?.value || record.note, output: output.current?.value || record.output }\r\n        dispatch({ type: \"updateAll\", data: newVal })\r\n      }\r\n      history.goBack()\r\n    },\r\n  }\r\n  const titles = { category: \"类型\", output: \"金额\", createAt: \"日期\", note: \"备注\" }\r\n  const category: { [key: string]: \"收入\" | \"支出\" } = { \"+\": \"收入\", \"-\": \"支出\" }\r\n  // const keys = Object.keys(titles) as (keyof typeof titles)[]\r\n  const Note = (\r\n    <div className=\"record\">\r\n      <ul>\r\n        <li>\r\n          <label>\r\n            <span>{titles.output}：</span>\r\n            <input type=\"text\" defaultValue={record?.output} ref={output} />\r\n          </label>\r\n        </li>\r\n        <li>\r\n          <label>\r\n            <span>{titles.note}：</span>\r\n            <input type=\"text\" defaultValue={record?.note} ref={note} />\r\n          </label>\r\n        </li>\r\n        <li className=\"no-pointer\">\r\n          <label>\r\n            <span>{titles.category}：</span>\r\n            <input type=\"text\" defaultValue={category[record?.category]} />\r\n          </label>\r\n        </li>\r\n\r\n        <li className=\"no-pointer\">\r\n          <label>\r\n            <span>{titles.createAt}：</span>\r\n            <input type=\"text\" defaultValue={record?.createAt} />\r\n          </label>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n  return (\r\n    <MyLayout className=\"tag\">\r\n      <MHeader onOk={map.onOk}>{map.title}</MHeader>\r\n      <main>{!record ? <span>账单不存在或者已删除</span> : Note}</main>\r\n      <div className=\"button-wrapper\">\r\n        {btnVisible && (\r\n          <Button\r\n            title={map.value}\r\n            onClick={() => {\r\n              map.onclick()\r\n            }}></Button>\r\n        )}\r\n      </div>\r\n    </MyLayout>\r\n  )\r\n})\r\n\r\nexport default EditRecord\r\n","import Detail from \"@/views/Detail\"\nimport Money from \"@/views/Money\"\nimport Tags from \"@/views/Tags\"\nimport React, { useEffect, useMemo, useReducer } from \"react\"\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\"\nimport AddTags from \"@/views/AddTags\"\nimport EditTag from \"@/views/EditTag\"\nimport Home from \"@/views/Home\"\nimport NoMatch from \"views/NoMatch\"\nimport Statistics from \"views/Statistics\"\nimport \"./App.less\"\nimport { Context } from \"./common/ts/context\"\nimport { reducer } from \"reducers/reducer\"\nimport { useRecord } from \"./hooks/useRecord\"\nimport EditRecord from \"./views/EditRecord\"\n\n// TODO how to keep-alive like vue?\nconst store: myTypes.Store = {\n  newRecords: [],\n  allRecords: [],\n}\nconst App: React.FC = () => {\n  const { records } = useRecord()\n  const [state, dispatch] = useReducer(reducer, store)\n  const value = useMemo(() => {\n    return { state, dispatch }\n  }, [state])\n\n  useEffect(() => {\n    dispatch({ type: \"addAll\", data: records })\n  }, [records])\n  return (\n    <Context.Provider value={value}>\n      <Router>\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/home\"></Redirect>\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/tags\" component={Tags} />\n          <Route exact path=\"/tags/:tagId\" component={EditTag} />\n          <Route exact path=\"/addTags\" component={AddTags} />\n          <Route exact path=\"/detail\" component={Detail}></Route>\n          <Route exact path=\"/editRecord/:recordId\" component={EditRecord}></Route>\n          <Route exact path=\"/money\" component={Money} />\n          <Route exact path=\"/statistics\" component={Statistics} />\n          <Route path=\"*\" component={NoMatch} />\n        </Switch>\n      </Router>\n    </Context.Provider>\n  )\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"common/less/index.less\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { createFromIconfontCN } from \"@ant-design/icons\"\n\nexport const IconFont = createFromIconfontCN({\n  scriptUrl: \"//at.alicdn.com/t/font_2004957_uhq290qv94.js\",\n})\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}